sudo: required
dist: trusty

os: linux

language: c

compiler:
  - gcc
  - clang

env:
  global:
    - MBEDTLS_VERSION=2.2.1

matrix:
  include:
    - env: CONFIG="--disable-lzo"
      compiler: gcc
    - env: CONFIG="--disable-lzo"
      compiler: clang
    - env: CONFIG="--with-crypto-library=mbedtls --enable-crypto"
      compiler: gcc
    - env: CONFIG="--with-crypto-library=mbedtls --enable-crypto"
      compiler: clang
    - env: CONFIG=""
      os: osx
      osx_image: xcode6.4
      compiler: clang
    - env: CONFIG=""
      os: osx
      osx_image: xcode7.3
      compiler: clang
    - env: CONFIG="--with-crypto-library=mbedtls --enable-crypto"
      os: osx
      osx_image: xcode6.4
      compiler: clang
    - env: CONFIG="--with-crypto-library=mbedtls --enable-crypto"
      os: osx
      osx_image: xcode7.3
      compiler: clang

addons:
  apt:
    packages:
      - liblzo2-dev
      - libpam0g-dev
      - liblz4-dev
      - linux-libc-dev

cache:
  apt: true
  ccache: true
  directories:
  - download-cache

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update     ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install lzo; fi

install:
  - mkdir ~/bin && ln -s $(which ccache) ~/bin/$CC && export PATH=$HOME/bin:$PATH
  - if [ ! -d download-cache ]; then mkdir download-cache; fi
  - if [ ! -f download-cache/mbedtls-${MBEDTLS_VERSION}-apache.tgz ]; then wget -O download-cache/mbedtls-${MBEDTLS_VERSION}-apache.tgz https://tls.mbed.org/download/mbedtls-${MBEDTLS_VERSION}-apache.tgz; fi
  - tar zxf download-cache/mbedtls-${MBEDTLS_VERSION}-apache.tgz
  - cd mbedtls-${MBEDTLS_VERSION}
  - make > build.log 2>&1 || (cat build.log && exit 1)
  - sudo make install
  - cd ..

script:
  - which $CC
  - autoreconf -vi
  - ./configure $CONFIG
  - make > build.log 2>&1 || (cat build.log && exit 1)
  - ldd src/openvpn/openvpn
  - make check
